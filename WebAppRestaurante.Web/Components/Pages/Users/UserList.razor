@page "/users"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "SuperAdmin,Admin")]
@inject ApiClient ApiClient
@inject IToastService ToastService
@rendermode InteractiveServer

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h3>Gestión de Usuarios</h3>
        </div>
        <div class="col text-end">
            <button class="btn btn-primary" @onclick="ShowCreateUserModal">
                <i class="bi bi-person-plus"></i> Nuevo Usuario
            </button>
        </div>
    </div>

    @if (users == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Usuario</th>
                        <th>Nombre</th>
                        <th>Email</th>
                        <th>Roles</th>
                        <th>Estado</th>
                        <th>Último Acceso</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in users)
                    {
                        <tr>
                            <td>@user.Username</td>
                            <td>@user.FullName</td>
                            <td>@user.Email</td>
                            <td>@string.Join(", ", user.UserRoles.Select(r => r.Role.RoleName))</td>
                            <td>
                                <span class="badge @(user.IsActive ? "bg-success" : "bg-danger")">
                                    @(user.IsActive ? "Activo" : "Inactivo")
                                </span>
                            </td>
                            <td>@(user.LastLogin?.ToString("dd/MM/yyyy HH:mm") ?? "Nunca")</td>
                            <td>
                                <button class="btn btn-sm btn-primary" @onclick="() => ShowEditUserModal(user)">
                                    <i class="bi bi-pencil"></i>
                                </button>
                                @if (IsCurrentUserSuperAdmin)
                                {
                                    <button class="btn btn-sm btn-danger ms-1" @onclick="() => ShowDeleteConfirmation(user)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<AppModal @ref="createEditModal">
    <Title>
        @(editingUser == null ? "Crear Usuario" : "Editar Usuario")
    </Title>
    <Body>
        <EditForm Model="userModel" OnValidSubmit="HandleUserSubmit">
            <DataAnnotationsValidator />

            <div class="mb-3">
                <label class="form-label">Usuario</label>
                <InputText class="form-control" @bind-Value="userModel.Username" disabled="@(editingUser != null)" />
                <ValidationMessage For="@(() => userModel.Username)" />
            </div>

            @if (editingUser == null)
            {
                <div class="mb-3">
                    <label class="form-label">Contraseña</label>
                    <InputText type="password" class="form-control" @bind-Value="userModel.Password" />
                    <ValidationMessage For="@(() => userModel.Password)" />
                </div>
            }

            <div class="mb-3">
                <label class="form-label">Nombre</label>
                <InputText class="form-control" @bind-Value="userModel.FirstName" />
                <ValidationMessage For="@(() => userModel.FirstName)" />
            </div>

            <div class="mb-3">
                <label class="form-label">Apellidos</label>
                <InputText class="form-control" @bind-Value="userModel.LastName" />
                <ValidationMessage For="@(() => userModel.LastName)" />
            </div>

            <div class="mb-3">
                <label class="form-label">Email</label>
                <InputText class="form-control" @bind-Value="userModel.Email" />
                <ValidationMessage For="@(() => userModel.Email)" />
            </div>

            <div class="mb-3">
                <label class="form-label">Roles</label>
                @foreach (var role in availableRoles)
                {
                    <div class="form-check">
                        <InputCheckbox class="form-check-input"
                                       @bind-Value="role.IsSelected" />
                        <label class="form-check-label">@role.RoleName</label>
                    </div>
                }
            </div>
        </EditForm>
    </Body>
    <Footer>
        <button type="button" class="btn btn-secondary" @onclick="CloseModal">Cancelar</button>
        <button type="button" class="btn btn-primary" @onclick="HandleUserSubmit">Guardar</button>
    </Footer>
</AppModal>

<AppModal @ref="deleteModal">
    <Title>Confirmar Eliminación</Title>
    <Body>
        ¿Está seguro que desea desactivar al usuario @deletingUser?.Username?
    </Body>
    <Footer>
        <button type="button" class="btn btn-secondary" @onclick="() => deleteModal.Close()">Cancelar</button>
        <button type="button" class="btn btn-danger" @onclick="HandleDeleteUser">Eliminar</button>
    </Footer>
</AppModal>