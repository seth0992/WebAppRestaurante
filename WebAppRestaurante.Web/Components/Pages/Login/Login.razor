@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using WebAppRestaurante.Models.Models
@using WebAppRestaurante.Web.Authentication
@using WebAppRestaurante.Web.Components.Layout
@layout EmptyLayout
@inject ApiClient apiClient
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authStateProvider
@inject NotificationService NotificationService

@* <EditForm Model="loginModel" FormName="Login" OnValidSubmit="HandleLogin">

    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-value="loginModel.Username" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" typeof="password" @bind-value="loginModel.Password" />
    </div>
    <button type="submit" class="btn btn-primary mt-3">Login</button> 
</EditForm> *@


<div class="min-h-screen bg-gradient-to-br from-blue-100 to-blue-200 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8 bg-white p-10 rounded-xl shadow-2xl">
        <div class="text-center">
            <h2 class="text-3xl font-extrabold text-gray-900 mb-2">
                Bienvenido
            </h2>
            <p class="text-sm text-gray-600">
                Ingresa tus credenciales para continuar
            </p>
        </div>

        <EditForm Model="loginModel" FormName="Login" OnValidSubmit="HandleLogin" class="mt-8 space-y-6">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-red-500 text-sm mb-4" />

            <div class="rounded-md -space-y-px">
                <div class="mb-4">
                    <label for="username" class="block text-sm font-medium text-gray-700 mb-1">
                        Usuario
                    </label>
                    <RadzenTextBox 
                        id="username"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                        @bind-Value="loginModel.Username"
                        Placeholder="Ingresa tu usuario" />
                    <ValidationMessage For="@(() => loginModel.Username)" class="text-red-500 text-sm" />
                </div>

                <div class="mb-4">
                    <label for="password" class="block text-sm font-medium text-gray-700 mb-1">
                        Contraseña
                    </label>
                    <RadzenPassword 
                        id="password"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                        @bind-Value="loginModel.Password"
                        Placeholder="Ingresa tu contraseña" />
                    <ValidationMessage For="@(() => loginModel.Password)" class="text-red-500 text-sm" />
                </div>
            </div>

            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <RadzenCheckBox class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded" TValue="bool"/>
                    <label for="remember-me" class="ml-2 block text-sm text-gray-900">
                        Recordarme
                    </label>
                </div>

                <div class="text-sm">
                    <a href="#" class="font-medium text-blue-600 hover:text-blue-500">
                        ¿Olvidaste tu contraseña?
                    </a>
                </div>
            </div>

            <div>
                <RadzenButton 
                    ButtonType="ButtonType.Submit"
                    class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                    Text="Iniciar Sesión"
                    ButtonStyle="ButtonStyle.Primary" />
            </div>
        </EditForm>
    </div>
</div>



@code {
    public LoginModel loginModel { get; set; } = new LoginModel();

    // private async Task HandleLogin() {
    //     var res = await apiClient.PostAsync<LoginResponseModel, LoginModel>("api/Auth/login", loginModel);

    //     if (res != null && res.Token != null) {
    //         //Use CustomAuthStateProvider.
    //         await ((CustomAuthStateProvider)authStateProvider).MarkUserAsAuthenticated(res);
    //         navigationManager.NavigateTo("/");
    //     }

    // }

    private async Task HandleLogin()
    {
        try
        {
            var res = await apiClient.PostAsync<LoginResponseModel, LoginModel>("api/Auth/login", loginModel);
            if (res != null && res.Token != null)
            {
                await ((CustomAuthStateProvider)authStateProvider).MarkUserAsAuthenticated(res);
                NotificationService.Notify(NotificationSeverity.Success, "¡Bienvenido!", "Has iniciado sesión correctamente");
                navigationManager.NavigateTo("/");
            }
            else
            {
                NotificationService.Notify(NotificationSeverity.Error, "Error", "Credenciales inválidas");
            }
        }
        catch (Exception ex)
        {
            
            NotificationService.Notify(NotificationSeverity.Error, "Error", "Ha ocurrido un error al iniciar sesión");
            NotificationService.Notify(NotificationSeverity.Error, "Error", $"{ex.Message}");
        }
    }
}
